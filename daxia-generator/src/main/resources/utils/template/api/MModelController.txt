package {basePackage}.web.controller.m;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.collections.CollectionUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import {basePackage}.common.Module;
import {basePackage}.dto.{Model}DTO;
import {basePackage}.dto.api.{Model}APIDTO;
import {basePackage}.dto.api.info.{Model}InfoAPIDTO;
import {basePackage}.exception.ObjectNotFoundException;
import {basePackage}.service.{Model}Service;
import {basePackage}.util.BeanMapper;

/**
 * 这个controller是专门用来响应手机端的请求的，有以下注意事项
 * 1, 请把类上的@Module的name改成正确的名称，只需要把xx给替换掉就行了，具体xx应该替换成什么，请参考与Admin{Model}Controller类的@Module。
 * 2, 如果某个方法的操作需要记录日志，请在方法的上面加上@Log(opertion = "xxx")，具体用法可参考Admin{Model}Controller类，一般来说，查询的方法不需要记录日志，增删改的需要记录。
 * 3, 所有的接收请求的方法都要加上@ResponseBody，这样返回的值就会被当成是json了。
 * 4, 在方法里，如果参数不合格，使用{basePackage}.util.ValidationUtils.assertTrue()方法进行验证。
 * 5, 在查询方法里，如果没有找到记录，请抛{basePackage}.exception.ObjectNotFoundException异常。
 * 6， 对于第4点和第5点，它们所抛的异常都会被controller aop处理，并会转换成对应的json返回给手机端，不需要我们关心。
 * 7， 如果不需要用到list方法，请把下面的list方法删掉。这个list方法只是提供一个一个示例。
 */
@Controller
@RequestMapping(value = "/m/{model}", produces = "text/html;charset=UTF-8")
@Module(name = "手机端xx模块")
public class M{Model}Controller extends MBaseController {
	@Autowired
	private {Model}Service {model}Service;

	@ResponseBody
	@RequestMapping("list")
	public String list({Model}DTO dto) throws Exception {
		List<{Model}DTO> list = {model}Service.find(new {Model}DTO(), null);
		if (CollectionUtils.isEmpty(list)) {
			throw new ObjectNotFoundException("没有找到记录");
		}

		List<{Model}APIDTO> dtos = new ArrayList<{Model}APIDTO>();
		for ({Model}DTO d : list) {
			dtos.add(BeanMapper.map(d, {Model}APIDTO.class));
		}

		{Model}InfoAPIDTO info = new {Model}InfoAPIDTO();
		info.set{Model}Infos(dtos);
		return toJson(info);
	}

}
